import{Euler,EventDispatcher,Vector3}from"../three.min.js";var PointerLockControls=function(camera,domElement){void 0===domElement&&(console.warn('THREE.PointerLockControls: The second parameter "domElement" is now mandatory.'),domElement=document.body),this.domElement=domElement,this.isLocked=!1,this.minPolarAngle=0,this.maxPolarAngle=Math.PI;var scope=this,changeEvent={type:"change"},lockEvent={type:"lock"},unlockEvent={type:"unlock"},euler=new Euler(0,0,0,"YXZ"),PI_2=Math.PI/2,vec=new Vector3,direction;function onMouseMove(event){if(!1!==scope.isLocked){var movementX=event.movementX||event.mozMovementX||event.webkitMovementX||0,movementY=event.movementY||event.mozMovementY||event.webkitMovementY||0;euler.setFromQuaternion(camera.quaternion),euler.y-=.002*movementX,euler.x-=.002*movementY,euler.x=Math.max(PI_2-scope.maxPolarAngle,Math.min(PI_2-scope.minPolarAngle,euler.x)),camera.quaternion.setFromEuler(euler),scope.dispatchEvent(changeEvent)}}function onPointerlockChange(){scope.domElement.ownerDocument.pointerLockElement===scope.domElement?(scope.dispatchEvent(lockEvent),scope.isLocked=!0):(scope.dispatchEvent(unlockEvent),scope.isLocked=!1)}function onPointerlockError(){console.error("THREE.PointerLockControls: Unable to use Pointer Lock API")}this.connect=function(){scope.domElement.ownerDocument.addEventListener("mousemove",onMouseMove,!1),scope.domElement.ownerDocument.addEventListener("pointerlockchange",onPointerlockChange,!1),scope.domElement.ownerDocument.addEventListener("pointerlockerror",onPointerlockError,!1)},this.disconnect=function(){scope.domElement.ownerDocument.removeEventListener("mousemove",onMouseMove,!1),scope.domElement.ownerDocument.removeEventListener("pointerlockchange",onPointerlockChange,!1),scope.domElement.ownerDocument.removeEventListener("pointerlockerror",onPointerlockError,!1)},this.dispose=function(){this.disconnect()},this.getObject=function(){return camera},this.getDirection=(direction=new Vector3(0,0,-1),function(v){return v.copy(direction).applyQuaternion(camera.quaternion)}),this.moveForward=function(distance){vec.setFromMatrixColumn(camera.matrix,0),vec.crossVectors(camera.up,vec),camera.position.addScaledVector(vec,distance)},this.moveRight=function(distance){vec.setFromMatrixColumn(camera.matrix,0),camera.position.addScaledVector(vec,distance)},this.lock=function(){this.domElement.requestPointerLock()},this.unlock=function(){scope.domElement.ownerDocument.exitPointerLock()},this.connect()};PointerLockControls.prototype=Object.create(EventDispatcher.prototype),PointerLockControls.prototype.constructor=PointerLockControls;export{PointerLockControls};